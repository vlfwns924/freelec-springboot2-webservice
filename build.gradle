plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
}

group = 'kr.co.lgit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter() //추가 이유 : mavenCentral은 본인이 라이브러리를 업로드하기 위해 많은 과정과 설정이 필요. jcenter가 간단하게 가능
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'junit', name: 'junit', version: '4.12' //junit(테스트 코드) 버전 설정 (새로고침마다 @RunWith 오류 해결)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools' //클래스 파일 수정 후 테스트 시 Spring Boot 재시작 없이 반영(자동 리로드)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전 관리
	// database
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'mysql:mysql-connector-java'
	// mariaDB 연결
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
