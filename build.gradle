buildscript {
	ext {
		queryDslVersion = "4.4.0"  //QueryDSL을 사용하기 위한 설정
	}
}
 
plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'kr.co.lgit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-devtools' /* hot-swap */ //파일 수정 후 재시작 없이 Spring boot 반영
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전 관리
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' // database (springboot 내장 jdbc 사용2)
	// jsp 연동(jasper, jstl)
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'
	// Log4JDBC (application.properties에도 설정해주면 SQL 쿼리 결과를 테이블 형태로 보여줌)
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	// mariaDB 연결
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
	
	compileOnly 'org.projectlombok:lombok' //롬복
	runtimeOnly 'mysql:mysql-connector-java' //database (springboot 내장 jdbc 사용1)
	// yml, properties에서 사용하는 Configuration의 자동완성을 도와주는 메타데이터
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok' //롬복
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //스프링 시큐리티 관련 의존성 설정
}
 
// QueryDSL //Q클래스를 사용할 수 있도록 generated 디렉토리를 sourceSet에 추가.
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
